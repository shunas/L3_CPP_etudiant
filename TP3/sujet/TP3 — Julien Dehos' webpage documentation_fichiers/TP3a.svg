<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="380px" preserveAspectRatio="none" style="width:674px;height:380px;" version="1.1" viewBox="0 0 674 380" width="674px" zoomAndPan="magnify"><defs><filter height="300%" id="f6an3kzdla7qp" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--class Location--><rect fill="#FEFECE" filter="url(#f6an3kzdla7qp)" height="86.4141" id="Location" style="stroke: #A80036; stroke-width: 1.5;" width="190" x="6" y="238"/><ellipse cx="71.25" cy="254" fill="#ADD8E6" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M70.4844,254.5469 Q68.6406,253.9063 67.9844,253.1953 Q67.3281,252.4844 67.3281,251.2969 Q67.3281,249.75 68.4063,248.875 Q69.4844,248 71.3594,248 Q72.2188,248 73.0703,248.25 Q73.9219,248.5 74.7656,249 L74.7656,252 Q73.9844,251.0156 73.1641,250.5078 Q72.3438,250 71.5469,250 Q70.6719,250 70.1953,250.3828 Q69.7188,250.7656 69.7188,251.4688 Q69.7188,252.0156 70.0625,252.375 Q70.4063,252.7344 71.5,253.1719 L72.5625,253.4219 Q74.0625,253.9063 74.7656,254.7031 Q75.4688,255.5 75.4688,256.7188 Q75.4688,258.375 74.3594,259.1875 Q73.25,260 71.0156,260 Q70.0938,260 69.1641,259.75 Q68.2344,259.5 67.375,259 L67.375,256 Q68.3594,257.0156 69.2734,257.5078 Q70.1875,258 71.0781,258 Q71.9844,258 72.4844,257.5938 Q72.9844,257.1875 72.9844,256.4531 Q72.9844,255.9063 72.6484,255.4922 Q72.3125,255.0781 71.6875,254.8438 L70.4844,254.5469 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="51" x="91.75" y="258.1543">Location</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="195" y1="270" y2="270"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="12" y="284.2104">_idClient: int</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="12" y="297.0151">_idProduit: int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="195" y1="303.6094" y2="303.6094"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="12" y="317.8198">«const» afficherLocation(): void</text><!--class Client--><rect fill="#FEFECE" filter="url(#f6an3kzdla7qp)" height="124.8281" id="Client" style="stroke: #A80036; stroke-width: 1.5;" width="243" x="96.5" y="8"/><ellipse cx="196.75" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M199.7188,29 Q199.1406,29.5 198.5,29.75 Q197.8594,30 197.1563,30 Q194.6563,30 193.3359,28.4609 Q192.0156,26.9219 192.0156,24 Q192.0156,21.0781 193.3359,19.5391 Q194.6563,18 197.1563,18 Q197.8594,18 198.5078,18.25 Q199.1563,18.5 199.7188,19 L199.7188,22 Q199.0938,20.9688 198.5,20.4844 Q197.9063,20 197.2656,20 Q195.9375,20 195.25,21.0078 Q194.5625,22.0156 194.5625,24 Q194.5625,25.9844 195.25,26.9922 Q195.9375,28 197.2656,28 Q197.9063,28 198.5,27.5156 Q199.0938,27.0313 199.7188,26 L199.7188,29 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="34" x="217.25" y="28.1543">Client</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="97.5" x2="338.5" y1="40" y2="40"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="104.5" y="48.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="116.5" y="54.2104">_id: int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="104.5" y="61.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="116.5" y="67.0151">_nom: std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="97.5" x2="338.5" y1="73.6094" y2="73.6094"/><ellipse cx="107.5" cy="85.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="116.5" y="87.8198">Client(id: int, nom: const std::string &amp;)</text><ellipse cx="107.5" cy="98.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="116.5" y="100.6245">«const» getId(): int</text><ellipse cx="107.5" cy="111.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="212" x="116.5" y="113.4292">«const» getNom(): const std::string &amp;</text><ellipse cx="107.5" cy="123.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="116.5" y="126.2339">«const» afficherClient(): void</text><!--class Produit--><rect fill="#FEFECE" filter="url(#f6an3kzdla7qp)" height="124.8281" id="Produit" style="stroke: #A80036; stroke-width: 1.5;" width="288" x="375" y="8"/><ellipse cx="493.25" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M496.2188,29 Q495.6406,29.5 495,29.75 Q494.3594,30 493.6563,30 Q491.1563,30 489.8359,28.4609 Q488.5156,26.9219 488.5156,24 Q488.5156,21.0781 489.8359,19.5391 Q491.1563,18 493.6563,18 Q494.3594,18 495.0078,18.25 Q495.6563,18.5 496.2188,19 L496.2188,22 Q495.5938,20.9688 495,20.4844 Q494.4063,20 493.7656,20 Q492.4375,20 491.75,21.0078 Q491.0625,22.0156 491.0625,24 Q491.0625,25.9844 491.75,26.9922 Q492.4375,28 493.7656,28 Q494.4063,28 495,27.5156 Q495.5938,27.0313 496.2188,26 L496.2188,29 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="43" x="513.75" y="28.1543">Produit</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="376" x2="662" y1="40" y2="40"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="383" y="48.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="38" x="395" y="54.2104">_id: int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="383" y="61.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="395" y="67.0151">_description: std::string</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="376" x2="662" y1="73.6094" y2="73.6094"/><ellipse cx="386" cy="85.5117" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="262" x="395" y="87.8198">Produit(id: int, description: const std::string &amp;)</text><ellipse cx="386" cy="98.3164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="106" x="395" y="100.6245">«const» getId(): int</text><ellipse cx="386" cy="111.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="395" y="113.4292">«const» getDescription(): const std::string &amp;</text><ellipse cx="386" cy="123.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="395" y="126.2339">«const» afficherProduit(): void</text><!--class Magasin--><rect fill="#FEFECE" filter="url(#f6an3kzdla7qp)" height="176.0469" id="Magasin" style="stroke: #A80036; stroke-width: 1.5;" width="275" x="231.5" y="193"/><ellipse cx="340.25" cy="209" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M343.2188,214 Q342.6406,214.5 342,214.75 Q341.3594,215 340.6563,215 Q338.1563,215 336.8359,213.4609 Q335.5156,211.9219 335.5156,209 Q335.5156,206.0781 336.8359,204.5391 Q338.1563,203 340.6563,203 Q341.3594,203 342.0078,203.25 Q342.6563,203.5 343.2188,204 L343.2188,207 Q342.5938,205.9688 342,205.4844 Q341.4063,205 340.7656,205 Q339.4375,205 338.75,206.0078 Q338.0625,207.0156 338.0625,209 Q338.0625,210.9844 338.75,211.9922 Q339.4375,213 340.7656,213 Q341.4063,213 342,212.5156 Q342.5938,212.0313 343.2188,211 L343.2188,214 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="49" x="360.75" y="213.1543">Magasin</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="232.5" x2="505.5" y1="225" y2="225"/><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="239.5" y="233.9023"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="251.5" y="239.2104">_clients: std::vector&lt;Client&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="239.5" y="246.707"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="251.5" y="252.0151">_produits: std::vector&lt;Produit&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="239.5" y="259.5117"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="190" x="251.5" y="264.8198">_locations: std::vector&lt;Location&gt;</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="239.5" y="272.3164"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="251.5" y="277.6245">_idCourantClient: int</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="239.5" y="285.1211"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="251.5" y="290.4292">_idCourantProduit: int</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="232.5" x2="505.5" y1="297.0234" y2="297.0234"/><ellipse cx="242.5" cy="308.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="54" x="251.5" y="311.2339">Magasin()</text><ellipse cx="242.5" cy="321.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="251.5" y="324.0386">«const» nbClients(): int</text><ellipse cx="242.5" cy="334.5352" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="251.5" y="336.8433">ajouterClient(nom: const std::string &amp;): void</text><ellipse cx="242.5" cy="347.3398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="251.5" y="349.6479">«const» afficherClients(): void</text><ellipse cx="242.5" cy="360.1445" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="194" x="251.5" y="362.4526">supprimerClient(idClient: int): void</text><!--link Location to Magasin--><path d="M196.0039,281 C203.4875,281 210.9711,281 218.4546,281 " fill="none" id="Location-Magasin" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="231.4816,281,225.4816,277,219.4816,281,225.4816,285,231.4816,281" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Client to Magasin--><path d="M262.8961,133.087 C273.9498,148.4962 286.0569,165.3741 298.0126,182.0408 " fill="none" id="Client-Magasin" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="305.8348,192.9452,305.5878,185.7383,298.8403,183.1945,299.0873,190.4014,305.8348,192.9452" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Produit to Magasin--><path d="M474.4012,133.087 C463.4207,148.4962 451.3938,165.3741 439.5173,182.0408 " fill="none" id="Produit-Magasin" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="431.7469,192.9452,438.4864,190.3802,438.7108,183.1726,431.9713,185.7376,431.7469,192.9452" style="stroke: #A80036; stroke-width: 1.0;"/><!--
@startuml

class Location <<(S,LightBlue)>> {
_idClient: int
_idProduit: int
<<const>> afficherLocation(): void
}

class Client {
- _id: int
- _nom: std::string
+ Client(id: int, nom: const std::string &)
+ <<const>> getId(): int
+ <<const>> getNom(): const std::string &
+ <<const>> afficherClient(): void
}

class Produit {
- _id: int
- _description: std::string
+ Produit(id: int, description: const std::string &)
+ <<const>> getId(): int
+ <<const>> getDescription(): const std::string &
+ <<const>> afficherProduit(): void
}

class Magasin {
- _clients: std::vector<Client>
- _produits: std::vector<Produit>
- _locations: std::vector<Location>
- _idCourantClient: int
- _idCourantProduit: int
+ Magasin()
+ <<const>> nbClients(): int
+ ajouterClient(nom: const std::string &): void
+ <<const>> afficherClients(): void
+ supprimerClient(idClient: int): void
}

Location -* Magasin
Client - -* Magasin
Produit - -* Magasin

@enduml

PlantUML version 1.2017.18(Fri Oct 06 18:56:32 CEST 2017)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 1.8.0_172-02
Operating System: Linux
OS Version: 4.14.32
Default Encoding: UTF-8
Language: fr
Country: FR
--></g></svg>